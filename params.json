{
  "name": "Pyy1128.GitHub.io",
  "tagline": "PYY的博客",
  "body": "#一、数据格式转换\r\n+ **更改数据输出格式**\r\n```\r\nevents2['thour']=map(lambda x: '%02.f:00-%02.f:59 ' % (x,x),events1.thour)\r\n```\r\n+ **小数按照百分比输出**\r\n```\r\nprint '%.2f %%'%(count_prop[0]*100)\r\n```\r\n\r\n#二、列表操作\r\n+ **list.index(value)返回的是等于value的第一索引值**\r\n+ **取值**\r\n```\r\nsize=[2,3,4]\r\nprint size[:-2] ##输出2。表示输出从开始到倒数位置为2之间的所有数。最后一个数位置为0。\r\n```\r\n+ **两列表一对一组合**\r\n```\r\nx=zip(size[1:],size[:-1])\r\nprint x\r\n```\r\n+ **指定位置插入元素**\r\n```\r\nlist.insert(index, obj)\r\n```\r\n+ **判断列表所有元素满足一个条件时，返回TRUE**\r\n```\r\nzz1=all(re.search(r'^\\S[\\s\\S]*', y) for y in zz)\r\n```\r\n+ **map：可对列表中的每一个元素应用函数**\r\n```\r\nidx=map(lambda x:x+1,idx)\r\n```\r\n+ **两列表应用函数**\r\n```\r\nfor (v,k) in zip(x,y):\r\n    x=''.join([v,k])\r\n    z.append(x)\r\n```\r\n+ **判断是否含有某个元素**\r\n```\r\nprint None in m\r\n```\r\n+ **去掉某个特定值**\r\n```\r\ny.remove('其他')\r\n```\r\n+ **列表元素替换**\r\n```\r\nout_list=[m1[0] if v==m[0] else v for v in out_list]\r\n```\r\n+ **对列表中多个值的替换**\r\n```\r\nm=['归属于母公司股东的综合收益总额','归属于母公司股东的净利润','归属于母公司股东的其他综合收益的税后净额']\r\nm1=['归属于母公司所有者的综合收益总额','归属于母公司所有者的净利润','归属于母公司所有者的其他综合收益的税后净额']\r\nout_list=[m1[m.index(v)] if v in m else v for v in out_list]\r\n```\r\n\r\n\r\n\r\n\r\n#二、数据框操作\r\n+ **查看数据框前几行**\r\n```\r\nprint phone.head(n=10)\r\n```\r\n+ **在已有dataframe中添加新列**\r\n```\r\nx1.loc[:,'group']=np.nan\r\n```\r\n+ **不同dataframe的行合并rbind**\r\n```\r\npd.concat([x,x1],ignore_index=True)\r\n```\r\n+ **取dataframe中的前指定行或是指定列**\r\n```\r\nx1=gender_age_test.ix[0:5,].copy(deep=True)\r\n```\r\n+ **返回数据框dataframe的维度**\r\n```\r\nprint train_test.shape\r\n```\r\n+ **判断dataframe中某些特征是否重复**\r\n```\r\nx1=x.duplicated(['device_id'])\r\n```\r\n+ **去除dataframe中重复行**\r\n```\r\nx1=x.drop_duplicates()\r\n```\r\n+ **返回Series满足特定条件时的索引**\r\n```\r\nx1[x1==True].index[0:10]\r\n```\r\n+ **求交集、并集**。。\r\n```\r\nprint len(set(x).intersection(set(x1)))\r\nprint len(set(x).union(set(x1)))\r\nprint len(set(x).difference(set(x1)))\r\n```\r\n+ **集合转成列表**\r\n```\r\nlist()\r\n```\r\n+ 查看方法的帮助文档：\r\n```\r\nx=train_phone.phone_brand.value_counts()\r\nprint help(pd.value_counts)\r\n```\r\n+ **数组和Series转换**\r\n```\r\nx2=np.array(x1)\r\nx3=pd.Series(np.cumsum(x2),index=x.index)\r\n```\r\n+ **数据框dataframe满足条件的某些行**\r\n```\r\nprint train_phone1[train_phone1.gender=='M']\r\nxiaomi=train_phone1[train_phone1.phone_brand.isin(name)]\r\n```\r\n+ **数据框dataframe替换某些列的值**\r\n```\r\ntrain_phone1.ix[train_phone1.phone_brand.isin(name)==False,'phone_brand']='Others'\r\n```\r\n+ **数据框dataframe求行和**\r\n```\r\ndata.sum(axis = 1)\r\n```\r\n+ **数据框dataframe求行比例**\r\n```\r\nx= data.div(data.sum(axis = 1), axis = 0)\r\n```\r\n+ **使用方法时，返回None，因为方法不能赋值**\r\n```\r\nname1.append(\"Others\")\r\n```\r\n+ **数据框纵向合并**\r\n```\r\ntrain.append(test,ignore_index=True)\r\n```\r\n+ **修改数据框列名**\r\n```\r\ndf_test.rename(columns={'index':'device_id'},inplace=True)\r\n```\r\n+ **数据框输出**\r\n```\r\nimport sys\r\nreload(sys)\r\nsys.setdefaultencoding('utf8')\r\ntable_list.to_excel('E:\\\\pythonWorkSpace\\\\financial report\\\\hhh.xlsx', sheet_name='Sheet1',index=False,encoding='utf-8')\r\n```\r\n+ **数据框增加一行series**\r\n```\r\ndf.loc['df']=series\r\ndf_table.loc[i]=list_1\r\n```\r\n```\r\none_table_df=pd.DataFrame(columns=titles)\r\none_table_df = one_table_df.append(one_series,ignore_index=True)\r\nprint one_table_df\r\n```\r\n\r\n\r\n\r\n#三、Series操作\r\n+ **判断某个Series是否在另一个Series中**\r\n```\r\ntest.ix[:,'device_id'].isin(events.ix[:,'device_id'])\r\n```\r\n+ **合并两个series，形成dataframe**\r\n```\r\npd.concat([s1, s2], axis=1)\r\n```\r\n+ **\r\n+ **增加元素**\r\n```\r\nSeries.set_value('公司',5)\r\n```\r\n+ **series增加元素时，如果之前没有元素，则text会变成float格式**\r\n```\r\none_series['起始日期'] = qsrq_dict[gglb_dict_sub[x_term]]\r\n```\r\n\r\n\r\n#四、图表制作\r\n+ **画条形图**\r\n```\r\np=train_phone.group.value_counts().sort_index().plot(kind='bar',figsize=(15,6),rot=0)\r\n_=p.set_xlabel('Group'),p.set_ylabel('Count')\r\nplt.show()\r\n```\r\n+ **改变x轴刻度、旋转（倾斜）刻度、改变刻度字体大小**\r\n```\r\nplt.xticks([1, 2, 3], ['mon', 'tue', 'wed'],rotation=45)\r\nplt.xticks(rotation=45,fontsize=7.5)\r\n```\r\n\r\n#五、其它\r\n+ **读写文件，并设置encoding**\r\n```\r\nf = open('test', 'w')\r\nf.write(foo.encode('utf8'))\r\nf.close()\r\n```\r\n```\r\nnp.savetxt(r'test.txt',train_IsInvalid_df, fmt='%s\\t%s\\t%s')\r\n```\r\n\r\n+ **读取某个文件夹所有的文件名**\r\n```\r\nimport glob\r\npath =r'E:\\pythonWorkSpace\\xiaolongren\\data_to_parse'\r\nfilenames = glob.glob(path+'\\*')\r\n```\r\n遇到编码问题\r\n```\r\npath =r'E:\\pythonWorkSpace\\financial report\\samples\\try'\r\nfilenames = glob.glob(path+'\\*'+'.xml')\r\nprint filenames[0].decode('gbk').encode('utf-8')\r\n```\r\n\r\n+ **\\_future\\_模块**\r\n这个模块可以导入python更高级版本的函数~~可以用2.x版本的python去测试高级一点版本的3.x版本的python。\r\n+ **构造类**\r\n```\r\n#类定义  \r\n    class people:  \r\n        #定义基本属性  \r\n        name = ''  \r\n        age = 0  \r\n        #定义私有属性,私有属性在类外部无法直接进行访问  \r\n        __weight = 0  \r\n        #定义构造方法  \r\n        def __init__(self,n,a,w):  \r\n            self.name = n  \r\n            self.age = a  \r\n            self.__weight = w  \r\n        def speak(self):  \r\n            print(\"%s is speaking: I am %d years old\" %(self.name,self.age))  \r\n\r\n      \r\n    p = people('tom',10,30)  \r\n    p.speak()\r\n```\r\n+ **编码问题encoding**\r\nhttps://docs.python.org/3/howto/unicode.html\r\nhttp://stackoverflow.com/questions/222386/what-do-i-need-to-know-about-unicode \r\n    + 将以unicode编码的中文字符串进行转码\r\n```\r\nlist3 = unicode(lines2[0], 'unicode-escape') \r\n```\r\n+ **取pdf某些页面**\r\n```\r\nfrom pyPdf import PdfFileWriter, PdfFileReader\r\n\r\noutput = PdfFileWriter()\r\ninput1 = PdfFileReader(file(\"600639_2015_n.pdf\", \"rb\"))\r\n\r\n# print the title of document1.pdf\r\nprint \"title = %s\" % (input1.getDocumentInfo().title)\r\n\r\n# add page 1 from input1 to output document, unchanged\r\noutput.addPage(input1.getPage(50))\r\n\r\n# add page 2 from input1, but rotated clockwise 90 degrees\r\noutput.addPage(input1.getPage(1).rotateClockwise(90))\r\n\r\n# add page 3 from input1, rotated the other way:\r\noutput.addPage(input1.getPage(2).rotateCounterClockwise(90))\r\n# alt: output.addPage(input1.getPage(2).rotateClockwise(270))\r\n\r\n# add page 4 from input1, but first add a watermark from another pdf:\r\npage4 = input1.getPage(3)\r\nwatermark = PdfFileReader(file(\"600876_2015_n.pdf\", \"rb\"))\r\npage4.mergePage(watermark.getPage(0))\r\n\r\n# add page 5 from input1, but crop it to half size:\r\npage5 = input1.getPage(4)\r\npage5.mediaBox.upperRight = (\r\n    page5.mediaBox.getUpperRight_x() / 2,\r\n    page5.mediaBox.getUpperRight_y() / 2\r\n)\r\noutput.addPage(page5)\r\n\r\n# print how many pages input1 has:\r\nprint \"document1.pdf has %s pages.\" % input1.getNumPages()\r\n\r\n# finally, write \"output\" to document-output.pdf\r\noutputStream = file(\"document-output.pdf\", \"wb\")\r\noutput.write(outputStream)\r\noutputStream.close()\r\n```\r\n+ **定义函数时，里面用到的变量都得事先定义，如x=(),list_text=[]**\r\n+ **调用另外一个.py文件的函数**\r\n```\r\nfrom function import *\r\n```\r\n+ **读取根目录下所有的txt文件**\r\n```\r\npath =r'E:\\pythonWorkSpace\\financial report\\samples\\sh'\r\nfilenames = glob.glob(path+'\\*'+'.txt')\r\n```\r\n+ **使用BeautifulSoup 解析中文乱码**\r\n```\r\nsoup = BeautifulSoup(email_id_example,from_encoding='utf8')\r\n```\r\n\r\n+ **忽略警告**\r\n```\r\nimport warnings\r\nwarnings.filterwarnings(\"ignore\")\r\n```\r\n+ **打开中文文件名的文件乱码**\r\n```\r\na='E:\\\\pythonWorkSpace\\\\financial report\\\\samples\\\\try\\\\GQY视讯：2015年年度报告.xml'\r\nf = open(a.decode('utf8'))\r\nprint f.read()\r\n```\r\n+ **查找对象所有的属性和方法*\r\n```\r\nprint dir(soup)\r\n```\r\n\r\n+ **读取指定行**\r\n```\r\nfp = open(r'E:\\pythonWorkSpace\\wangyiPosTrain_1.txt')\r\nfor i, line in enumerate(fp):\r\n    if i <=1000:\r\n        print line\r\nfp.close()\r\n```\r\n\r\n\r\n\r\n+ **路径处理**\r\n路径拆分\r\n```\r\nstyle_prefix,_ = os.path.splitext(os.path.basename('you.jpg'))\r\n```\r\n```\r\ndataset=r'chainer-fast-neuralstyle-master\\sample_images'\r\nfs = os.listdir(dataset) # 查看路径下所有的文件\r\nimagepaths = []\r\nfor fn in fs:\r\n    base, ext = os.path.splitext(fn)#路径拆分\r\n    if ext == '.jpg' or ext == '.png':\r\n        imagepath = os.path.join(dataset,fn)#连接路径名\r\n        imagepaths.append(imagepath)\r\n```\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}